server:
  port: 8080

spring:
  application:
    name: api-gateway

  # Spring MVC 자동 설정 비활성화 (Spring Cloud Gateway는 웹플럭스 기반)
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration
      - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
  
  # Redis 설정 (Rate Limiting용)
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
  
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      # CORS 설정 (Spring Cloud Gateway 자체 설정 사용)
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins:
              - "http://localhost:5500"
              - "http://127.0.0.1:5500"
              - "http://localhost:3000"
              - "http://127.0.0.1:3000"
            allowed-methods:
              - "GET"
              - "POST"
              - "PUT"
              - "DELETE"
              - "OPTIONS"
            allowed-headers:
              - "Origin"
              - "Content-Type"
              - "Accept"
              - "Authorization"
              - "X-Requested-With"
              - "Cache-Control"
              - "X-User-Id"
            allow-credentials: true
            max-age: 3600
      
      routes:
        # Chat Service 라우팅
        - id: chat-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/chat/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 10
                redis-rate-limiter.burst-capacity: 20
            - name: CircuitBreaker
              args:
                name: chat-service-circuit-breaker
                fallbackUri: forward:/fallback/chat
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,INTERNAL_SERVER_ERROR
                methods: GET,POST
                backoff:
                  first-backoff: 100ms
                  max-backoff: 1000ms
                  factor: 2
            
        # LLM Service 라우팅
        - id: llm-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/llm/**
          filters:
            - StripPrefix=0  # /api 제거하지 않음
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 5
                redis-rate-limiter.burst-capacity: 10
            - name: CircuitBreaker
              args:
                name: llm-service-circuit-breaker
                fallbackUri: forward:/fallback/llm
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY,INTERNAL_SERVER_ERROR
                methods: GET,POST
                backoff:
                  first-backoff: 200ms
                  max-backoff: 2000ms
                  factor: 2
                
        # Health Check 라우팅
        - id: health-check
          uri: http://localhost:8081
          predicates:
            - Path=/health/**
          filters:
            - StripPrefix=1
            
        # API Documentation 라우팅
        - id: api-docs
          uri: http://localhost:8081
          predicates:
            - Path=/api-docs/**
          filters:
            - StripPrefix=1

# Circuit Breaker 설정
resilience4j:
  circuitbreaker:
    instances:
      chat-service-circuit-breaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
      llm-service-circuit-breaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3

# Rate Limiting 설정
  ratelimiter:
    instances:
      default:
        limit-for-period: 100
        limit-refresh-period: 1s
        timeout-duration: 1s

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,circuitbreakers,ratelimiters
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

# Logging 설정
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.netty: DEBUG
    backend.jobkrchatbot.apigateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
