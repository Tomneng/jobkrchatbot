server:
  port: 8081

spring:
  application:
    name: chat-service
  
  datasource:
    url: jdbc:postgresql://postgres:5432/jobkrchatbot
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: kafka1:29092,kafka2:29093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # Exactly-Once 보장 설정
      enable-idempotence: true
      acks: all
      retries: 3
      max-in-flight-requests-per-connection: 1
    consumer:
      group-id: chat-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # Exactly-Once 보장 설정
      isolation-level: read_committed
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
  
  data:
    redis:
      host: redis
      port: 6379

# LLM 서비스 설정
llm:
  service:
    url: http://llm-service:8082

logging:
  level:
    chatservice: INFO
    org.springframework.kafka: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
